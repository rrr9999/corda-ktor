buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm'
    id 'java'
    id 'kotlin'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.3"
        apiVersion = "1.3"
        jvmTarget = "1.8"
        javaParameters = true // Useful for reflection.
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"
    compile "$corda_release_group:corda-jackson:$corda_release_version"

    // CorDapp dependencies.
    compile project(":contracts")
    compile project(":workflows")

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"

    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"

    implementation "io.ktor:ktor-serialization:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
}

def mainClass = "com.template.webserver.ApplicationKt"

application {
    mainClassName = mainClass
}

